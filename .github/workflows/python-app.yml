name: CollabInnovate Backend pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12.3]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest and coverage
        run: |
          pytest --cov=CollaInnovate_Backend
  sonarcloud:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for SonarCloud analysis

      # Set up Java (if needed, uncomment)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # SonarCloud action to perform analysis
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=maximeato
            -Dsonar.projectKey=MaximeAto_CollaInnovate_Backend
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=lib/
            -Dsonar.test.exclusions=tests/**
            -Dsonar.tests=tests/
            -Dsonar.verbose=true


  # sonarcloud:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     # Checkout the code
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # Full history for SonarCloud analysis

  #     # Set up Java (if needed, uncomment)
  #     - name: Set up Java 17
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'

  #     # SonarCloud action to perform analysis
  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@v2.1.0
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         args: >
  #           -Dsonar.organization=maximeato
  #           -Dsonar.projectKey=MaximeAto_CollaInnovate_Backend
  #           -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
  #           -Dsonar.python.coverage.reportPaths=coverage.xml
  #           -Dsonar.sources=$GITHUB_WORKSPACE
  #           -Dsonar.test.exclusions=tests/**
  #           -Dsonar.tests=tests/
  #           -Dsonar.verbose=true
  #           -X
    
      # - name: SonarCloud Scan
      #   env:
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_PROJECT_KEY: MaximeAto_CollaInnovate_Backend   
      #     SONAR_ORGANIZATION: maximeato
      #   run: sonar-scanner 
      #      -Dsonar.host.url=${{ secrets.SONAR_URL }}
      #      -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #      -Dsonar.organization=maximeato
      #      -Dsonar.projectKey=MaximeAto_CollaInnovate_Backend
      #      -Dsonar.sources=$GITHUB_WORKSPACE
