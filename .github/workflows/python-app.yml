name: CollabInnovate Backend-SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12.3]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest and coverage
        run: |
          pytest --cov=CollaInnovate_Backend

  sonarQube:
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      - uses: actions/checkout@v4
  
      - name: Cache Java
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-v1
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java (SonarQube requires Java)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
  
      - name: Verify Java version
        run: java -version
  
      - name: Install SonarScanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip -d $HOME/.sonar
          export PATH="$HOME/.sonar/sonar-scanner-4.6.2.2472-linux/bin:$PATH"
          echo "SonarScanner installed in $HOME/.sonar/sonar-scanner-4.6.2.2472-linux/"
          sonar-scanner -v
  
      - name: Run SonarQube scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $HOME/.sonar/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.projectKey=MaximeAto_CollaInnovate_Backend:maximeato \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -X
